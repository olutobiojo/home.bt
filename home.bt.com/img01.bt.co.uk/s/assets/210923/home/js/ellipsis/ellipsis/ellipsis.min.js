! function t(e, n, r) {
    function o(a, d) {
        if (!n[a]) {
            if (!e[a]) {
                var l = "function" == typeof require && require;
                if (!d && l) return l(a, !0);
                if (i) return i(a, !0);
                var s = new Error("Cannot find module '" + a + "'");
                throw s.code = "MODULE_NOT_FOUND", s
            }
            var u = n[a] = {
                exports: {}
            };
            e[a][0].call(u.exports, function(t) {
                var n = e[a][1][t];
                return o(n ? n : t)
            }, u, u.exports, t, e, n, r)
        }
        return n[a].exports
    }
    for (var i = "function" == typeof require && require, a = 0; a < r.length; a++) o(r[a]);
    return o
}({
    1: [function(t, e, n) {
        "use strict";
        var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        };
        ! function(t, e) {
            function n(t, e, n) {
                var r = t.children(),
                    o = !1;
                t.empty();
                for (var i = 0, d = r.length; i < d; i++) {
                    var l = r.eq(i);
                    if (t.append(l), n && t.append(n), a(t, e)) {
                        l.remove(), o = !0;
                        break
                    }
                    n && n.detach()
                }
                return o
            }

            function o(e, n, r, d, l) {
                var s = !1,
                    u = "a, table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, blockquote, select, optgroup, option, textarea, script, style",
                    c = "script, .dotdotdot-keep";
                return e.contents().detach().each(function() {
                    var f = this,
                        h = t(f);
                    if ("undefined" == typeof f) return !0;
                    if (h.is(c)) e.append(h);
                    else {
                        if (s) return !0;
                        e.append(h), !l || h.is(d.after) || h.find(d.after).length || e[e.is(u) ? "after" : "append"](l), a(r, d) && (s = 3 == f.nodeType ? i(h, n, r, d, l) : o(h, n, r, d, l)), s || l && l.detach()
                    }
                }), n.addClass("is-truncated"), s
            }

            function i(e, n, r, o, i) {
                var l = e[0];
                if (!l) return !1;
                var c = u(l),
                    h = c.indexOf(" ") !== -1 ? " " : "ã€€",
                    p = "letter" == o.wrap ? "" : h,
                    g = c.split(p),
                    v = -1,
                    m = -1,
                    y = 0,
                    w = g.length - 1;
                if (o.fallbackToLetter && 0 === y && 0 === w && (p = "", g = c.split(p), w = g.length - 1), o.maxLength) c = d(c.trim().substr(0, o.maxLength), o), s(l, c);
                else {
                    for (; y <= w && (0 !== y || 0 !== w);) {
                        var b = Math.floor((y + w) / 2);
                        if (b == m) break;
                        m = b, s(l, g.slice(0, m + 1).join(p) + o.ellipsis), r.children().each(function() {
                            t(this).toggle().toggle()
                        }), a(r, o) ? (w = m, o.fallbackToLetter && 0 === y && 0 === w && (p = "", g = g[0].split(p), v = -1, m = -1, y = 0, w = g.length - 1)) : (v = m, y = m)
                    }
                    if (v == -1 || 1 === g.length && 0 === g[0].length) {
                        var x = e.parent();
                        e.detach();
                        var C = i && i.closest(x).length ? i.length : 0;
                        if (x.contents().length > C ? l = f(x.contents().eq(-1 - C), n) : (l = f(x, n, !0), C || x.detach()), l && (c = d(u(l), o), s(l, c), C && i)) {
                            var T = i.parent();
                            t(l).parent().append(i), t.trim(T.html()) || T.remove()
                        }
                    } else c = d(g.slice(0, v + 1).join(p), o), s(l, c)
                }
                return !0
            }

            function a(t, e) {
                return t.innerHeight() > e.maxHeight || e.maxLength && t.text().trim().length > e.maxLength
            }

            function d(e, n) {
                for (; t.inArray(e.slice(-1), n.lastCharacter.remove) > -1;) e = e.slice(0, -1);
                return t.inArray(e.slice(-1), n.lastCharacter.noEllipsis) < 0 && (e += n.ellipsis), e
            }

            function l(t) {
                return {
                    width: t.innerWidth(),
                    height: t.innerHeight()
                }
            }

            function s(t, e) {
                t.innerText ? t.innerText = e : t.nodeValue ? t.nodeValue = e : t.textContent && (t.textContent = e)
            }

            function u(t) {
                return t.innerText ? t.innerText : t.nodeValue ? t.nodeValue : t.textContent ? t.textContent : ""
            }

            function c(t) {
                do t = t.previousSibling; while (t && 1 !== t.nodeType && 3 !== t.nodeType);
                return t
            }

            function f(e, n, r) {
                var o, i = e && e[0];
                if (i) {
                    if (!r) {
                        if (3 === i.nodeType) return i;
                        if (t.trim(e.text())) return f(e.contents().last(), n)
                    }
                    for (o = c(i); !o;) {
                        if (e = e.parent(), e.is(n) || !e.length) return !1;
                        o = c(e[0])
                    }
                    if (o) return f(t(o), n)
                }
                return !1
            }

            function h(e, n) {
                return !!e && ("string" == typeof e ? (e = t(e, n), !!e.length && e) : !!e.jquery && e)
            }

            function p(t) {
                for (var e = t.innerHeight(), n = ["paddingTop", "paddingBottom"], r = 0, o = n.length; r < o; r++) {
                    var i = parseInt(t.css(n[r]), 10);
                    isNaN(i) && (i = 0), e -= i
                }
                return e
            }
            if (!t.fn.dotdotdot) {
                t.fn.dotdotdot = function(e) {
                    if (0 === this.length) return t.fn.dotdotdot.debug('No element found for "' + this.selector + '".'), this;
                    if (this.length > 1) return this.each(function() {
                        t(this).dotdotdot(e)
                    });
                    var i = this,
                        d = i.contents();
                    i.data("dotdotdot") && i.trigger("destroy.dot"), i.data("dotdotdot-style", i.attr("style") || ""), i.css("word-wrap", "break-word"), "nowrap" === i.css("white-space") && i.css("white-space", "normal"), i.bind_events = function() {
                        return i.bind("update.dot", function(e, l) {
                            switch (i.removeClass("is-truncated"), e.preventDefault(), e.stopPropagation(), r(s.height)) {
                                case "number":
                                    s.maxHeight = s.height;
                                    break;
                                case "function":
                                    s.maxHeight = s.height.call(i[0]);
                                    break;
                                default:
                                    s.maxHeight = p(i)
                            }
                            s.maxHeight += s.tolerance, "undefined" != typeof l && (("string" == typeof l || "nodeType" in l && 1 === l.nodeType) && (l = t("<div />").append(l).contents()), l instanceof t && (d = l)), v = i.wrapInner('<div class="dotdotdot" />').children(), v.contents().detach().end().append(d.clone(!0)).find("br").replaceWith("  <br />  ").end().css({
                                height: "auto",
                                width: "auto",
                                border: "none",
                                padding: 0,
                                margin: 0
                            });
                            var c = !1,
                                f = !1;
                            return u.afterElement && (c = u.afterElement.clone(!0), c.show(), u.afterElement.detach()), a(v, s) && (f = "children" == s.wrap ? n(v, s, c) : o(v, i, v, s, c)), v.replaceWith(v.contents()), v = null, t.isFunction(s.callback) && s.callback.call(i[0], f, d), u.isTruncated = f, f
                        }).bind("isTruncated.dot", function(t, e) {
                            return t.preventDefault(), t.stopPropagation(), "function" == typeof e && e.call(i[0], u.isTruncated), u.isTruncated
                        }).bind("originalContent.dot", function(t, e) {
                            return t.preventDefault(), t.stopPropagation(), "function" == typeof e && e.call(i[0], d), d
                        }).bind("destroy.dot", function(t) {
                            t.preventDefault(), t.stopPropagation(), i.unwatch().unbind_events().contents().detach().end().append(d).attr("style", i.data("dotdotdot-style") || "").removeClass("is-truncated").data("dotdotdot", !1)
                        }), i
                    }, i.unbind_events = function() {
                        return i.unbind(".dot"), i
                    }, i.watch = function() {
                        if (i.unwatch(), "window" == s.watch) {
                            var e = t(window),
                                n = e.width(),
                                r = e.height();
                            e.bind("resize.dot" + u.dotId, function() {
                                n == e.width() && r == e.height() && s.windowResizeFix || (n = e.width(), r = e.height(), f && clearInterval(f), f = setTimeout(function() {
                                    i.trigger("update.dot")
                                }, 100))
                            })
                        } else c = l(i), f = setInterval(function() {
                            if (i.is(":visible")) {
                                var t = l(i);
                                c.width == t.width && c.height == t.height || (i.trigger("update.dot"), c = t)
                            }
                        }, 500);
                        return i
                    }, i.unwatch = function() {
                        return t(window).unbind("resize.dot" + u.dotId), f && clearInterval(f), i
                    };
                    var s = t.extend(!0, {}, t.fn.dotdotdot.defaults, e),
                        u = {},
                        c = {},
                        f = null,
                        v = null;
                    return s.lastCharacter.remove instanceof Array || (s.lastCharacter.remove = t.fn.dotdotdot.defaultArrays.lastCharacter.remove), s.lastCharacter.noEllipsis instanceof Array || (s.lastCharacter.noEllipsis = t.fn.dotdotdot.defaultArrays.lastCharacter.noEllipsis), u.afterElement = h(s.after, i), u.isTruncated = !1, u.dotId = g++, i.data("dotdotdot", !0).bind_events().trigger("update.dot"), s.watch && i.watch(), i
                }, t.fn.dotdotdot.defaults = {
                    ellipsis: "... ",
                    wrap: "word",
                    fallbackToLetter: !0,
                    lastCharacter: {},
                    tolerance: 0,
                    callback: null,
                    after: null,
                    height: null,
                    watch: !1,
                    windowResizeFix: !0,
                    maxLength: null
                }, t.fn.dotdotdot.defaultArrays = {
                    lastCharacter: {
                        remove: [" ", "ã€€", ",", ";", ".", "!", "?"],
                        noEllipsis: []
                    }
                }, t.fn.dotdotdot.debug = function(t) {};
                var g = 1,
                    v = t.fn.html;
                t.fn.html = function(n) {
                    return n != e && !t.isFunction(n) && this.data("dotdotdot") ? this.trigger("update", [n]) : v.apply(this, arguments)
                };
                var m = t.fn.text;
                t.fn.text = function(n) {
                    return n != e && !t.isFunction(n) && this.data("dotdotdot") ? (n = t("<div />").text(n).html(), this.trigger("update", [n])) : m.apply(this, arguments)
                }
            }
        }(jQuery), jQuery(document).ready(function(t) {
            t(".dot-ellipsis").each(function() {
                var e = t(this).hasClass("dot-resize-update"),
                    n = t(this).hasClass("dot-timer-update"),
                    r = 0,
                    o = t(this).attr("class").split(/\s+/);
                t.each(o, function(t, e) {
                    var n = e.match(/^dot-height-(\d+)$/);
                    null !== n && (r = Number(n[1]))
                });
                var i = {};
                n && (i.watch = !0), e && (i.watch = "window"), r > 0 && (i.height = r), t(this).dotdotdot(i)
            })
        }), jQuery(window).on("load", function() {
            jQuery(".dot-ellipsis.dot-load-update").trigger("update.dot")
        })
    }, {}]
}, {}, [1]);